function List.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 0
push constant 0
call Node.new 3
pop this 0
push this 0
pop this 1
push constant 1
pop this 2
push pointer 0
return
function List.pushFront 1
push argument 0
pop pointer 0
push argument 1
push this 0
push constant 0
call Node.new 3
pop local 0
push this 0
push local 0
call Node.setPrev 2
pop temp 0
push local 0
pop this 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function List.popBack 3
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
call Node.getPrev 1
pop local 0
push local 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 0
call Node.setNext 2
pop temp 0
label IF_FALSE1
push this 1
pop local 1
push local 0
pop this 1
push local 1
call Node.data 1
pop local 2
push local 1
call Node.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
push local 2
return
function List.getFirstNode 0
push argument 0
pop pointer 0
push this 0
return
function List.getFirstData 1
push argument 0
pop pointer 0
push this 0
call Node.data 1
pop local 0
push local 0
return
function List.getSize 0
push argument 0
pop pointer 0
push this 2
return
function List.isEmpty 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function List.isInList 3
push argument 0
pop pointer 0
push this 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push argument 1
lt
not
if-goto WHILE_END0
push local 0
call Node.getNext 1
pop local 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 0
call Node.data 1
pop local 1
label WHILE_EXP1
push local 1
push argument 2
call Pos.equals 2
not
push local 0
push constant 0
eq
not
and
not
if-goto WHILE_END1
push local 0
call Node.getNext 1
pop local 0
push local 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Node.data 1
pop local 1
label IF_FALSE0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
goto IF_END1
label IF_FALSE1
push constant 0
not
return
label IF_END1

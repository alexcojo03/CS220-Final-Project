class Main {
    static SnakeGame game;

    function void main() {
        var char choice;

        let choice = 82;

        while(choice = 82) {
            do Main.printTitle();
            let game = SnakeGame.new(0, 0, 1);
            // Begin and end game here
            do Main.startGame();
            do Main.endGame();
            let choice = Main.waitForKey();
            // only allow q or r to be pressed 
            while(~((choice = 82) | (choice = 81))) {
                let choice = Main.waitForKey();
            }
        }

        /*
        var Pos a, b, c, d, e, cur;
        var List testList;
        let a = Pos.new(1,2);
        let b = Pos.new(3,4);
        let c = Pos.new(5,6);
        let d = Pos.new(7,8);
        let e = Pos.new(9,9);
        let testList = List.new(a);
        do testList.pushFront(b);
        do testList.pushFront(c);
        do testList.pushFront(d);
        do testList.pushFront(e);
        */
        return;

    }
    function void startGame() {
        do Screen.clearScreen();
        do game.generateNewFruit();
        do game.run();
        return;
    }


    function void endGame() {
        // Characters are 7 pixels wide, 10 pixels high
        do Output.moveCursor(13, 26);
        do Output.printString("Game Over");
        do Output.moveCursor(14, 12);
        do Output.printString("Press 'Q' to quit or 'R' to restart");
        do game.dispose();

        return;
    }


    function void printTitle() {
        do Screen.clearScreen();
        do Output.moveCursor(10,20);
        do Output.printString("Welcome to Snake");
        do Output.moveCursor(12,16);
        do Output.printString("Press any key to begin");
        do Main.waitForKey();
        do Screen.clearScreen();

        return;
    }

    function char waitForKey() {
        var char key;
        let key = 0;
        while(key = 0) {
            let key = Keyboard.keyPressed();
        }
        
        return key;
    }
    
    // Use for test purposes only
    function void printList(List list) {
        var Node current;
        var Pos currentData;
        var int xPos, yPos;
        let current = list.getFirstNode();
        while (~(current = null)) {
            let currentData = current.data();
            do currentData.print();
            do Output.println();
            let current = current.getNext();
        }
        return;
    }
}
class SnakeGame {
    field Snake player;
    field Pos startPos;
    field int currentDirection;

    constructor SnakeGame new(int startX, int startY, int startDirection) {
        let startPos = Pos.new(startX, startY);
        let player = Snake.new(startPos, startDirection);
        let currentDirection = startDirection;

        return this;
    }

    function void printGameOver() {
        // Characters are 7 pixels wide, 10 pixels high
        do Output.moveCursor(13, 26);
        do Output.printString("Game Over");
        return;
    }

    method void endGame() {
        do SnakeGame.printGameOver();
        do Sys.halt();
        return;
    }

    method void start() {
        // keep track of current key
        var char key;
        var boolean quit;
        // Test grow and shrink of snake by using integer variable
        var int i;
        let i = 0;

        let quit = false;

        // Create a loop, keep playing
        // until user quits
        while (~quit) {
            let i = i + 1;
            let i = Random.modulo(i, 5);
            if (player.isOutOfBounds()) {
                do endGame();
            }
            if (player.hitsItself()) {
                do endGame();
            }
            if (i = 0) {
                do player.grow(currentDirection);
            } else {
                do player.move(currentDirection);
            }
            let key = Keyboard.keyPressed();
            
            // Up arrow
            if (key = 131) { let currentDirection = 0; }
            // Right arrow
            if (key = 132) { let currentDirection = 1; }
            // Down arrow
            if (key = 133) { let currentDirection = 2; }
            // Left arrow
            if (key = 130) { let currentDirection = 3; }

            // User types 'Q' to quit
            if (key = 81) { let quit = true; }

            // Player cant do 180 deg turn
            if (Random.modulo((currentDirection + 2), 4) = player.getDirection()) {
                let currentDirection = player.getDirection();
            }

            do Sys.wait(200);
        }
        return;
    }
}